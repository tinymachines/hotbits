============================================================
FULL TRNG EVALUATION PIPELINE
============================================================

Step 1: Extracting random bits from ./working/evaluate-1755297832.txt...
----------------------------------------
# Input samples: 530104
# Output bits: 66448
# Compression ratio: 0.125 bits/sample
# Bit balance: 0.4983 (ideal: 0.5000)
# Chi-square: 0.7551 (lower is better)
# Max autocorrelation (lag 1-100): 0.0099

Generated 8306 bytes of random data

Step 3: Running Python randomness tests...
----------------------------------------
Testing 8306 bytes of data

============================================================
RANDOMNESS TEST REPORT
============================================================

QUICK
----------------------------------------
  Passed: 4/4 (100.0%)

============================================================

Step 4: Running Dieharder tests (this may take a while)...
----------------------------------------
#=============================================================================#
#            dieharder version 3.31.1 Copyright 2003 Robert G. Brown          #
#=============================================================================#
   rng_name    |           filename             |rands/second|
        mt19937|              working/random.bin|  8.20e+07  |
#=============================================================================#
        test_name   |ntup| tsamples |psamples|  p-value |Assessment
#=============================================================================#
   diehard_birthdays|   0|       100|     100|0.83286261|  PASSED  
      diehard_operm5|   0|   1000000|     100|0.67900206|  PASSED  
  diehard_rank_32x32|   0|     40000|     100|0.45430852|  PASSED  
    diehard_rank_6x8|   0|    100000|     100|0.32360362|  PASSED  
   diehard_bitstream|   0|   2097152|     100|0.38236350|  PASSED  
        diehard_opso|   0|   2097152|     100|0.66530873|  PASSED  
        diehard_oqso|   0|   2097152|     100|0.24642486|  PASSED  
         diehard_dna|   0|   2097152|     100|0.11220360|  PASSED  
diehard_count_1s_str|   0|    256000|     100|0.56851921|  PASSED  
diehard_count_1s_byt|   0|    256000|     100|0.74754686|  PASSED  
 diehard_parking_lot|   0|     12000|     100|0.66609484|  PASSED  
    diehard_2dsphere|   2|      8000|     100|0.49508434|  PASSED  
    diehard_3dsphere|   3|      4000|     100|0.92025548|  PASSED  
     diehard_squeeze|   0|    100000|     100|0.45457871|  PASSED  
        diehard_sums|   0|       100|     100|0.45753796|  PASSED  
        diehard_runs|   0|    100000|     100|0.80785090|  PASSED  
        diehard_runs|   0|    100000|     100|0.90548771|  PASSED  
       diehard_craps|   0|    200000|     100|0.57807700|  PASSED  
       diehard_craps|   0|    200000|     100|0.51437681|  PASSED  
 marsaglia_tsang_gcd|   0|  10000000|     100|0.07728238|  PASSED  
 marsaglia_tsang_gcd|   0|  10000000|     100|0.12651490|  PASSED  
         sts_monobit|   1|    100000|     100|0.39141256|  PASSED  
            sts_runs|   2|    100000|     100|0.39496584|  PASSED  
          sts_serial|   1|    100000|     100|0.33352411|  PASSED  
          sts_serial|   2|    100000|     100|0.49447926|  PASSED  
          sts_serial|   3|    100000|     100|0.77584174|  PASSED  
          sts_serial|   3|    100000|     100|0.07497701|  PASSED  
          sts_serial|   4|    100000|     100|0.52252526|  PASSED  
          sts_serial|   4|    100000|     100|0.32903343|  PASSED  
          sts_serial|   5|    100000|     100|0.81778834|  PASSED  
          sts_serial|   5|    100000|     100|0.68284410|  PASSED  
          sts_serial|   6|    100000|     100|0.70840379|  PASSED  
          sts_serial|   6|    100000|     100|0.66142295|  PASSED  
          sts_serial|   7|    100000|     100|0.98300382|  PASSED  
          sts_serial|   7|    100000|     100|0.57072474|  PASSED  
          sts_serial|   8|    100000|     100|0.82827770|  PASSED  
          sts_serial|   8|    100000|     100|0.27105588|  PASSED  
          sts_serial|   9|    100000|     100|0.18586903|  PASSED  
          sts_serial|   9|    100000|     100|0.09711381|  PASSED  
          sts_serial|  10|    100000|     100|0.19130459|  PASSED  
          sts_serial|  10|    100000|     100|0.90050466|  PASSED  
          sts_serial|  11|    100000|     100|0.82825388|  PASSED  
          sts_serial|  11|    100000|     100|0.22117014|  PASSED  
          sts_serial|  12|    100000|     100|0.47487600|  PASSED  
          sts_serial|  12|    100000|     100|0.65153493|  PASSED  
          sts_serial|  13|    100000|     100|0.57402006|  PASSED  
          sts_serial|  13|    100000|     100|0.79710488|  PASSED  
          sts_serial|  14|    100000|     100|0.48335959|  PASSED  
          sts_serial|  14|    100000|     100|0.13728529|  PASSED  
          sts_serial|  15|    100000|     100|0.75689540|  PASSED  
          sts_serial|  15|    100000|     100|0.77202333|  PASSED  
          sts_serial|  16|    100000|     100|0.90681995|  PASSED  
          sts_serial|  16|    100000|     100|0.06601311|  PASSED  
         rgb_bitdist|   1|    100000|     100|0.15095265|  PASSED  
         rgb_bitdist|   2|    100000|     100|0.29192335|  PASSED  
         rgb_bitdist|   3|    100000|     100|0.34258437|  PASSED  
         rgb_bitdist|   4|    100000|     100|0.88718055|  PASSED  
         rgb_bitdist|   5|    100000|     100|0.28358005|  PASSED  
         rgb_bitdist|   6|    100000|     100|0.46692168|  PASSED  
         rgb_bitdist|   7|    100000|     100|0.92593830|  PASSED  
         rgb_bitdist|   8|    100000|     100|0.36542866|  PASSED  
         rgb_bitdist|   9|    100000|     100|0.44139467|  PASSED  
         rgb_bitdist|  10|    100000|     100|0.96404166|  PASSED  
         rgb_bitdist|  11|    100000|     100|0.17413748|  PASSED  
         rgb_bitdist|  12|    100000|     100|0.77207026|  PASSED  
rgb_minimum_distance|   2|     10000|    1000|0.10736058|  PASSED  
rgb_minimum_distance|   3|     10000|    1000|0.53325520|  PASSED  
rgb_minimum_distance|   4|     10000|    1000|0.85826393|  PASSED  
rgb_minimum_distance|   5|     10000|    1000|0.75844576|  PASSED  
    rgb_permutations|   2|    100000|     100|0.98770440|  PASSED  
    rgb_permutations|   3|    100000|     100|0.58148454|  PASSED  
    rgb_permutations|   4|    100000|     100|0.74825640|  PASSED  
    rgb_permutations|   5|    100000|     100|0.90454103|  PASSED  
      rgb_lagged_sum|   0|   1000000|     100|0.35740113|  PASSED  
      rgb_lagged_sum|   1|   1000000|     100|0.08807409|  PASSED  
      rgb_lagged_sum|   2|   1000000|     100|0.11229959|  PASSED  
      rgb_lagged_sum|   3|   1000000|     100|0.31734429|  PASSED  
      rgb_lagged_sum|   4|   1000000|     100|0.15754346|  PASSED  
      rgb_lagged_sum|   5|   1000000|     100|0.79690485|  PASSED  
      rgb_lagged_sum|   6|   1000000|     100|0.89394932|  PASSED  
      rgb_lagged_sum|   7|   1000000|     100|0.46400693|  PASSED  
      rgb_lagged_sum|   8|   1000000|     100|0.72274901|  PASSED  
      rgb_lagged_sum|   9|   1000000|     100|0.44297848|  PASSED  
      rgb_lagged_sum|  10|   1000000|     100|0.62307250|  PASSED  
      rgb_lagged_sum|  11|   1000000|     100|0.71745339|  PASSED  
      rgb_lagged_sum|  12|   1000000|     100|0.64630146|  PASSED  
      rgb_lagged_sum|  13|   1000000|     100|0.88301179|  PASSED  
      rgb_lagged_sum|  14|   1000000|     100|0.04577552|  PASSED  
      rgb_lagged_sum|  15|   1000000|     100|0.42860972|  PASSED  
      rgb_lagged_sum|  16|   1000000|     100|0.39350594|  PASSED  
      rgb_lagged_sum|  17|   1000000|     100|0.42377117|  PASSED  
      rgb_lagged_sum|  18|   1000000|     100|0.72011078|  PASSED  
      rgb_lagged_sum|  19|   1000000|     100|0.50437020|  PASSED  
      rgb_lagged_sum|  20|   1000000|     100|0.83572803|  PASSED  
      rgb_lagged_sum|  21|   1000000|     100|0.70612712|  PASSED  
      rgb_lagged_sum|  22|   1000000|     100|0.94587273|  PASSED  
      rgb_lagged_sum|  23|   1000000|     100|0.22473335|  PASSED  
      rgb_lagged_sum|  24|   1000000|     100|0.84106767|  PASSED  
      rgb_lagged_sum|  25|   1000000|     100|0.05018248|  PASSED  
      rgb_lagged_sum|  26|   1000000|     100|0.94943300|  PASSED  
      rgb_lagged_sum|  27|   1000000|     100|0.23479325|  PASSED  
      rgb_lagged_sum|  28|   1000000|     100|0.47013330|  PASSED  
      rgb_lagged_sum|  29|   1000000|     100|0.78168123|  PASSED  
      rgb_lagged_sum|  30|   1000000|     100|0.70252231|  PASSED  
      rgb_lagged_sum|  31|   1000000|     100|0.07998221|  PASSED  
      rgb_lagged_sum|  32|   1000000|     100|0.91967425|  PASSED  
     rgb_kstest_test|   0|     10000|    1000|0.59163748|  PASSED  
     dab_bytedistrib|   0|  51200000|       1|0.40858589|  PASSED  
             dab_dct| 256|     50000|       1|0.01093430|  PASSED  
Preparing to run test 207.  ntuple = 0
        dab_filltree|  32|  15000000|       1|0.23575892|  PASSED  
        dab_filltree|  32|  15000000|       1|0.97740815|  PASSED  
Preparing to run test 208.  ntuple = 0
       dab_filltree2|   0|   5000000|       1|0.25278185|  PASSED  
       dab_filltree2|   1|   5000000|       1|0.44708881|  PASSED  
Preparing to run test 209.  ntuple = 0
        dab_monobit2|  12|  65000000|       1|0.02892210|  PASSED  

Step 5: Running NIST STS tests...
----------------------------------------
Running NIST Statistical Test Suite
==========================================
Input file: /tmp/nist_input_93325.bin
File size: 132896 bytes (1063168 bits)
Output directory: working/nist_results

Running tests...
cat: ../../working/nist_results/nist_input.txt: No such file or directory
cat: ../../working/nist_results/test_params.txt: No such file or directory
tee: ../../working/nist_results/nist_output.log: No such file or directory
           G E N E R A T O R    S E L E C T I O N 
           ______________________________________

    [0] Input File                 [1] Linear Congruential
    [2] Quadratic Congruential I   [3] Quadratic Congruential II
    [4] Cubic Congruential         [5] XOR
    [6] Modular Exponentiation     [7] Blum-Blum-Shub
    [8] Micali-Schnorr             [9] G Using SHA-1

   Enter Choice: 

		User Prescribed Input File: 
File Error:  file   could not be opened.

==========================================
Test Results Summary
==========================================
Results found in: repos/sts-2.1.2/sts-2.1.2/experiments/AlgorithmTesting/ApproximateEntropy

NIST STS testing complete. Full results in: working/nist_results/

============================================================
EVALUATION COMPLETE
Random binary saved to: working/random.bin
============================================================
